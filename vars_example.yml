---
# https://kea.readthedocs.io/en/stable/arm/ddns.html
# Sample configuration is taken from Debian 12 package kea-dhcp-ddns-server=2.2.0-6
kea_dhcp_ddns_config:
  DhcpDdns:
    ip-address: 127.0.0.1
    port: 53001
    control-socket:
      socket-type: unix
      socket-name: "/run/kea/kea-ddns-ctrl-socket"
    tsig-keys: []
    forward-ddns: {}
    reverse-ddns: {}
    loggers:
      - name: kea-dhcp-ddns
        output_options:
          - output: stdout
            pattern: |
              %-5p %m\
        severity: INFO
        debuglevel: 0

# https://kea.readthedocs.io/en/stable/arm/dhcp4-srv.html
# Sample configuration is taken from Debian 12 package kea-dhcp6-server=2.2.0-6
kea_dhcp_dhcp4_config:
  Dhcp4:
    interfaces-config:
      interfaces: []
    control-socket:
      socket-type: unix
      socket-name: /run/kea/kea4-ctrl-socket
    lease-database:
      type: memfile
      lfc-interval: 3600
    expired-leases-processing:
      reclaim-timer-wait-time: 10
      flush-reclaimed-timer-wait-time: 25
      hold-reclaimed-time: 3600
      max-reclaim-leases: 100
      max-reclaim-time: 250
      unwarned-reclaim-cycles: 5
    renew-timer: 900
    rebind-timer: 1800
    valid-lifetime: 3600
    option-data:
      - name: domain-name-servers
        data: 192.0.2.1, 192.0.2.2
      - code: 15
        data: example.org
      - name: domain-search
        data: mydomain.example.com, example.com
      - name: boot-file-name
        data: EST5EDT4\,M3.2.0/02:00\,M11.1.0/02:00
      - name: default-ip-ttl
        data: '0xf0'
    client-classes:
      - name: voip
        test: substring(option[60].hex,0,6) == 'Aastra'
        next-server: 192.0.2.254
        server-hostname: hal9000
        boot-file-name: /dev/null
    subnet4:
      - subnet: 192.0.2.0/24
        pools:
          - pool: 192.0.2.1 - 192.0.2.200
        option-data:
          - name: routers
            data: 192.0.2.1
        reservations:
          - hw-address: 1a:1b:1c:1d:1e:1f
            ip-address: 192.0.2.201
          - client-id: '01:11:22:33:44:55:66'
            ip-address: 192.0.2.202
            hostname: special-snowflake
          - duid: '01:02:03:04:05'
            ip-address: 192.0.2.203
            option-data:
              - name: domain-name-servers
                data: 10.1.1.202, 10.1.1.203
          - client-id: '01:12:23:34:45:56:67'
            ip-address: 192.0.2.204
            option-data:
              - name: vivso-suboptions
                data: '4491'
              - name: tftp-servers
                space: vendor-4491
                data: 10.1.1.202, 10.1.1.203
          - client-id: 01:0a:0b:0c:0d:0e:0f
            ip-address: 192.0.2.205
            next-server: 192.0.2.1
            server-hostname: hal9000
            boot-file-name: /dev/null
          - flex-id: '''s0mEVaLue'''
            ip-address: 192.0.2.206
    loggers:
      - name: kea-dhcp4
        output_options:
          - output: stdout
            pattern: |
              %-5p %m
        severity: INFO
        debuglevel: 0

# https://kea.readthedocs.io/en/stable/arm/dhcp6-srv.html
# Sample configuration is taken from Debian 12 package kea-dhcp6-server=2.2.0-6
kea_dhcp_dhcp6_config:
  Dhcp6:
    interfaces-config:
      interfaces: []
    control-socket:
      socket-type: unix
      socket-name: /run/kea/kea6-ctrl-socket
    lease-database:
      type: memfile
      lfc-interval: 3600
    expired-leases-processing:
      reclaim-timer-wait-time: 10
      flush-reclaimed-timer-wait-time: 25
      hold-reclaimed-time: 3600
      max-reclaim-leases: 100
      max-reclaim-time: 250
      unwarned-reclaim-cycles: 5
    renew-timer: 1000
    rebind-timer: 2000
    preferred-lifetime: 3000
    valid-lifetime: 4000
    option-data:
      - name: dns-servers
        data: 2001:db8:2::45, 2001:db8:2::100
      - code: 12
        data: 2001:db8::1
      - name: new-posix-timezone
        data: EST5EDT4\,M3.2.0/02:00\,M11.1.0/02:00
      - name: preference
        data: '0xf0'
      - name: bootfile-param
        data: root=/dev/sda2, quiet, splash
    subnet6:
      - subnet: 2001:db8:1::/64
        pools:
          - pool: 2001:db8:1::/80
        pd-pools:
          - prefix: '2001:db8:8::'
            prefix-len: 56
            delegated-len: 64
        option-data:
          - name: dns-servers
            data: 2001:db8:2::dead:beef, 2001:db8:2::cafe:babe
        reservations:
          - duid: 01:02:03:04:05:0A:0B:0C:0D:0E
            ip-addresses:
              - 2001:db8:1::100
          - hw-address: '00:01:02:03:04:05'
            ip-addresses:
              - 2001:db8:1::101
            option-data:
              - name: dns-servers
                data: 3000:1::234
              - name: nis-servers
                data: 3000:1::234
            client-classes:
              - special_snowflake
              - office
          - duid: 01:02:03:04:05:06:07:08:09:0A
            ip-addresses:
              - 2001:db8:1:0:cafe::1
            prefixes:
              - 2001:db8:2:abcd::/64
            hostname: foo.example.com
            option-data:
              - name: vendor-opts
                data: '4491'
              - name: tftp-servers
                space: vendor-4491
                data: 3000:1::234
          - flex-id: '''somevalue'''
            ip-addresses:
              - 2001:db8:1:0:cafe::2
    loggers:
      - name: kea-dhcp6
        output_options:
          - output: stdout
            pattern: |
              %-5p %m
        severity: INFO
        debuglevel: 0

# https://kea.readthedocs.io/en/stable/arm/agent.html
# Sample configuration is taken from Debian 12 package kea-ctrl-agent=2.2.0-6
kea_dhcp_ctrl_agent_config:
  Control-agent:
    http-host: 127.0.0.1
    http-port: 8000
    control-sockets:
      dhcp4:
        socket-type: unix
        socket-name: /run/kea/kea4-ctrl-socket
      dhcp6:
        socket-type: unix
        socket-name: /run/kea/kea6-ctrl-socket
      d2:
        socket-type: unix
        socket-name: /run/kea/kea-ddns-ctrl-socket
    hooks-libraries: []
    loggers:
      - name: kea-ctrl-agent
        output_options:
          - output: stdout
            pattern: "%-5p %m\n"
        severity: INFO
        debuglevel: 0

# Complete real world example
---
kea_dhcp_services:
  - name: kea-ctrl-agent
    # Disable kea-ctrl-agent
    manage: true
    state: stopped
    enabled: false
    template: etc/kea/kea-ctrl-agent.conf.j2
    dest: /etc/kea/kea-ctrl-agent.conf
    # Do not manage kea-ctrl-agent config file
    manage_config: false
  - name: kea-dhcp-ddns-server
    # Enable kea-dhcp-ddns-server servise
    manage: true
    state: started
    enabled: true
    template: etc/kea/kea-dhcp-ddns.conf.j2
    dest: /etc/kea/kea-dhcp-ddns.conf
    # Enable kea-dhcp-ddns-server config management
    manage_config: true
  - name: kea-dhcp4-server
    # Enable kea-dhcp-ddns-server servise
    manage: true
    state: started
    enabled: true
    template: etc/kea/kea-dhcp4.conf.j2
    dest: /etc/kea/kea-dhcp4.conf
    # Enable kea-dhcp4-server config management
    manage_config: true
  - name: kea-dhcp6-server
    # Disable kea-dhcp6-server
    manage: true
    state: stopped
    enabled: false
    template: etc/kea/kea-dhcp6.conf.j2
    dest: /etc/kea/kea-dhcp6.conf
    # Do not manage kea-dhcp6-server config file
    manage_config: false

# Enable management of all configuration files
kea_dhcp_config_manage: true

# Create configuration files backup with .example extension
kea_dhcp_config_backup: true

kea_dhcp_ddns_config:
  DhcpDdns:
    ip-address: 127.0.0.1
    port: 53001
    control-socket:
      socket-type: unix
      socket-name: "/run/kea/kea-ddns-ctrl-socket"
    tsig-keys:
      - name: ddns.key
        algorithm: HMAC-SHA512
        secret: jlR/...2qCYPA==
    forward-ddns:
      ddns-domains:
        # domain name must end with a dot
        - name: int.company.tld.
          user-context:
            comment: Primary internal FQDN domain
          key-name: ddns.key
          dns-servers:
            - ip-address: 10.24.126.1
              port: 53
    reverse-ddns:
      ddns-domains:
        # domain name must end with a dot
        - name: 1.24.10.in-addr.arpa.
          key-name: ddns.key
          dns-servers:
            - ip-address: 10.24.126.1
              port: 53
        - name: 2.24.10.in-addr.arpa.
          key-name: ddns.key
          dns-servers:
            - ip-address: 10.24.126.1
              port: 53
    loggers:
      - name: kea-dhcp-ddns
        output_options:
          - output: stdout
            pattern: |
              %-5p %m
        severity: INFO
        debuglevel: 0

kea_dhcp_dhcp4_config:
  Dhcp4:
    interfaces-config:
      interfaces:
        - eth0
    control-socket:
      socket-type: unix
      socket-name: /run/kea/kea4-ctrl-socket
    lease-database:
      type: memfile
      lfc-interval: 3600
    expired-leases-processing:
      reclaim-timer-wait-time: 3
      flush-reclaimed-timer-wait-time: 25
      hold-reclaimed-time: 1
      max-reclaim-leases: 100
      max-reclaim-time: 50
      unwarned-reclaim-cycles: 5
    match-client-id: false
    renew-timer: 900
    rebind-timer: 1800
    valid-lifetime: 3600
    option-data:
      - name: routers
        data: "{{ ansible_eth0['ipv4']['address'] }}"
      - name: domain-name-servers
        # Server are
        # Current server eth0 IP addr, DNS master server IP addr - 10.24.1.1,
        # DNS secondary server IP if it's not match with current server eth0 IP addr
        data: "{{ ansible_eth0['ipv4']['address'] }}, 10.24.1.1{{', 10.24.2.1' if ansible_eth0['ipv4']['address'] != '10.24.2.1' }}"
      - name: domain-name
        data: int.company.tld
      - name: domain-search
        data: int.company.tld
    # DDNS Params
    # Behavioral parameters (global)
    ddns-send-updates: true
    ddns-override-no-update: false
    ddns-override-client-update: false
    ddns-replace-client-name: "never"
    # ddns-generated-prefix: "myhost"
    # domain name without dot at the end
    ddns-qualifying-suffix: "int.company.tld"
    ddns-update-on-renew: false
    ddns-use-conflict-resolution: true
    # hostname-char-set: ""
    # hostname-char-replacement: ""
    dhcp-ddns:
      # Enable DDNS updates, kea-dhcp-ddns must be configured and running
      enable-updates: true
      # address of kea-dhc-ddns service not bind9 or another DNS service
      server-ip: 127.0.0.1
      server-port: 53001
      # sender-ip: ""
      # sender-port: 0
      max-queue-size: 1024
      ncr-protocol: UDP
      ncr-format: JSON
    # Subnets
    subnet4:
      # Build subnet from current host eth0 network/prefix
      # It will look like 10.24.X.0/24
      - subnet: "{{ ansible_eth0['ipv4']['network'] ~ '/' ~ ansible_eth0['ipv4']['prefix'] }}"
        option-data:
          - name: routers
            # Use eth0 IP as a router IP
            data: "{{ ansible_eth0['ipv4']['address'] }}"
        pools:
          # Range 10.24.X.1 - 10.24.X.128 will be used for hosts with static IP configuration
          # Dynamic DHCP pool range 10.24.X.129 - 10.24.X.190
          # Clients without reserved address will get IP from this pool
          # - pool: 10.24.X.129 - 10.24.X.190
          - pool: "{{ ansible_eth0['ipv4']['address'].split('.')[0:3] | join('.') }}.129 - {{ ansible_eth0['ipv4']['address'].split('.')[0:3] | join('.') }}.190"
            user-context:
              comment: Dynamic DHCP pool for clients without reservation
        # Use addresses from range 10.24.2.193 - 10.24.2.222 in reservations
        # In Kea DHCP reservations must be outside of the dynamic pools
        reservations: []
          # - hw-address: 1a:1b:1c:1d:1e:1f
          #   ip-address: 10.24.2.193
    loggers:
      - name: kea-dhcp4
        output_options:
          - output: stdout
            pattern: |
              %-5p %m
        severity: INFO
        debuglevel: 0
